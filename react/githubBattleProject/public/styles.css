:root {
  --color-primary: hsl(0, 100%, 50%);
}

html,
body,
#app {
  margin: 0;
  height: 100%;
  width: 100%;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen-Sans,
    Ubuntu, Cantarell, Helvetica Neue, sans-serif;
}

ul {
  padding: 0;
}

li {
  list-style-type: none;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 50px;
}

.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 8px;
}

.btn-clear {
  border: none;
  background: transparent;
}

.nav-link {
  font-size: calc(18 / 16 * 1rem);
  font-weight: bold;
  text-decoration: none;
  color: inherit;
}

button.nav-link:hover,
button.nav-link:focus {
  outline-color: rgb(233, 56, 56);
  outline-offset: 2px;
}

.grid {
  display: flex;
  flex-wrap: wrap;
}

.space-around {
  justify-content: space-around;
}

.header-sm {
  font-size: calc(28 / 16 * 1rem);
  font-weight: 300;
  margin: 10px;
}

.header-lg {
  font-size: calc(35 / 16 * 1rem);
  font-weight: 300;
  margin: 20px;
}

.avatar {
  width: 150px;
  height: 150px;
  border-radius: 3px;
  margin: 0 auto;
  display: block;
}

.center-text {
  text-align: center;
}

.link {
  color: rgb(187, 46, 31);
  text-decoration: none;
  font-weight: bold;
}

.card-list {
  margin: 20px 0;
  font-size: calc(20 / 16 * 1rem);
}

.card-list li {
  display: flex;
  align-items: center;
  margin: 10px;
}

.card-list svg {
  margin-right: 10px;
}

.card-list a {
  font-weight: 500;
  color: inherit;
}

.bg-light {
  background: rgba(0, 0, 0, 0.08);
  border-radius: 3px;
}

.card {
  margin: 10px 0;
  width: 250px;
  padding: 20px;
}

.card a {
  text-decoration: none;
}

.card img {
  margin-bottom: 8px;
}

.instructions-container {
  margin: 100px 0;
}

.container-sm {
  width: 80%;
  margin: 0 auto;
}

.battle-instructions {
  padding: 0;
  font-size: calc(24 / 16 * 1rem);
}

.battle-instructions li {
  flex: 1;
  min-width: 300px;
}

.battle-instructions svg {
  padding: 40px;
  border-radius: 3px;
}

.column {
  display: flex;
  flex-direction: column;
}

.row {
  display: flex;
  flex-direction: row;
}

.player {
  flex: 1;
  margin: 0 20px;
  padding: 10px;
}

.player-label {
  font-size: calc(20 / 16 * 1rem);
  margin: 5px 0;
  font-weight: 300;
}

.player-inputs input {
  padding: 8px;
  font-size: 16px;
  flex: 2;
  border-radius: 3px;
  border: none;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15);
}

.player-inputs .input-light {
  background: rgba(0, 0, 0, 0.02);
}

.player-inputs button {
  flex: 1;
  margin-left: 10px;
}

.btn {
  padding: 10px;
  text-decoration: uppercase;
  letter-spacing: 0.25em;
  border-radius: 3px;
  border: none;
  font-size: 1rem;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  text-decoration: none;
  max-width: 200px;
}

/* when element with .dark-btn has disable, the btn will have white bg. when element with .dark-btn has disable false, the btn will have a black bg */
/* disabled={!this.state.username}. when input is not blank this.state.username will be true but we use ! so it will be false which will not add attr disabled to element */
.dark-btn {
  color: #e6e6e6;
  background: #141414;
}

/* disabled={!this.state.username}. when input is blank this.state.username will be false but we use ! so it will be true which will add attr disabled to element */
.dark-btn:disabled {
  background: #f2f2f2;
  color: #c7c7c7;
}

.players-container {
  margin: 100px 0;
}

.avatar-small {
  width: 55px;
  height: 55px;
  border-radius: 50%;
}

.player-info {
  display: flex;
  flex: 1;
  align-items: center;
  font-size: calc(20 / 16 * 1rem);
  padding: 10px;
}

.player-info .link {
  margin-left: 10px;
}

.btn-space {
  margin: 40px auto;
}

.error {
  color: #ff1616;
  font-size: calc(20 / 16 * 1rem);
  margin: 50px 0;
}
